NOT_FOUND_IN_LYRA_ENV: untyped

Boxed: untyped

GLOBAL_ENV: untyped

class Env
  @parent0: Env?

  @parent1: Env?

  attr_reader module_name: Symbol

  attr_reader next_module_env: Env

  attr_reader inner: Hash[Symbol, untyped]

  attr_reader exportables: Array[Symbol]

  attr_reader is_module_env: bool

  def initialize: (Symbol module_name, ?Env? parent0, ?Env? parent1, ?Env? module_env, ?bool is_module_env) -> Env

  def self.create_module_env: (untyped module_name) -> untyped

  def self.global_env: () -> Env

  # NOT_FOUND_IN_LYRA_ENV == v can not be reversed
  def safe_find: (Symbol sym, ?bool include_global) -> untyped

  def find: (Symbol sym) -> (LyraFn|untyped)

  def is_defined?: (Symbol sym, ?bool include_global) -> bool

  def set!: (Symbol sym, untyped val) -> Env

  def set_no_export!: (Symbol sym, untyped val) -> untyped

  ANONYMOUS_ARG_NAMES: Array[Symbol]

  ANONYMOUS_ARG_REST: ::Symbol

  ANONYMOUS_ARG_ALL: ::Symbol

  def set_multi!: (Array[Symbol] keys, Array[untyped] values, bool varargs) -> Env

  def set_multi_anonymous!: (Array[untyped] values) -> Env

  def is_the_global_env?: () -> bool

  def public_module_vars: () -> untyped
end
